# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository.
  # name: template

  # A short description of the repository that will show up on GitHub.
  # description:

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  topics: jetbrains, plugin, material, theme, monokai, palenight, solarized, dracula

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: false

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: false

  # Updates the default branch for this repository.
  default_branch: master

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: false

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

  # Either `true` to make this repo available as a template repository or `false` to prevent it.
  # is_template: false
  # template_repository: false

  # `true` to archive this repository. Note: You cannot unarchive repositories through the API.
  archived: false

# Labels: define labels for Issues and Pull Requests
labels:
  - name: bug
    color: '#cc0000'
    description: An issue with the system üêõ.

  - name: feature
    # If including a `#`, make sure to wrap it with quotes!
    color: '#336699'
    description: New functionality

  - name: WIP
    # If including a `#`, make sure to wrap it with quotes!
    color: '#faf064'
    description: Work in progress

  - name: draft
    # If including a `#`, make sure to wrap it with quotes!
    color: '#c800c8'

# Milestones: define milestones for Issues and Pull Requests
# milestones:
#   - title: milestone-title
#     description: milestone-description
#     # The state of the milestone. Either `open` or `closed`
#     state: open

# Collaborators: give specific users access to this repository.
# See https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator for available options
# collaborators:
#   - username: my-user
#     # Note: `permission` is only valid on organization-owned repositories.
#     # The permission to grant the collaborator. Can be one of:
#     # * `pull` - can pull, but not push to or administer this repository.
#     # * `push` - can pull and push, but not administer this repository.
#     # * `admin` - can pull, push and administer this repository.
#     # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#     # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#     permission: admin

branches:
  - name: master
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      #        required_pull_request_reviews:
      # The number of approvals required. (1-6)
      #        required_approving_review_count: 1
      # Dismiss approved reviews automatically when a new commit is pushed.
      #        dismiss_stale_reviews: true
      # Blocks merge until code owners have reviewed.
      #        require_code_owner_reviews: true
      # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal restrictions object to disable. User and team dismissal restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
      #        dismissal_restrictions: {}
      # users: []
      # teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up-to-date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts:
          - quality-checks
      # Commits pushed to matching branches must have verified signatures. Set to false to disable.
      required_signatures: false
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevents merge commits from being pushed to matching branches. Set to false to disable.
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
      #  apps: []
      #  users: []
      #  teams: []
      # Permits force pushes for all users with push access. Set to null to disable.
      allow_force_pushes: true
      # Allows users with push access to delete matching branches. Set to false to disable.
      allow_deletions: false
      # Ensure all review conversations are seen and addressed prior to merging
      required_conversation_resolution: true
